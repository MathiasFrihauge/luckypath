<!-- newsletter.vue -->
<template>
  <div class="newsletter-form">
    <form @submit.prevent="submitForm">
        <h2 class="text-center mb-4">Claim your deal by sms</h2>
        <div class="form-group mb-3 d-flex align-items-center justify-content-center gap-2">
          <input 
            type="text" 
            class="form-control" 
            id="countryCode" 
            v-model="countryCode" 
            placeholder="+44" 
            required 
            pattern="^\+\d+$"
            @input="validateCountryCode"
            @focus="onCountryCodeFocus"
            @blur="onCountryCodeBlur"
            ref="countryCodeInput"
          >
          <!-- <input type="" class="form-control" id="tel" v-model="tel" placeholder="Enter your phonenumber" required ref="telInput"> -->
          <input
            type="tel"
            class="form-control"
            id="tel"
            v-model="tel"
            @input="validatePhone"
            placeholder="Enter your phone number"
            required
            ref="telInput"
            :class="{ 'is-invalid': !isValid && tel.length > 0 }"
          >
        </div>
        <div v-if="!isValid && tel.length > 0" class="invalid-feedback">
          Please enter a valid 10-digit phone number.
        </div>
        
        <button type="submit" class="btn btn-primary w-100 mt-1" :disabled="loading">
          <template v-if="loading">
            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            <span class="sr-only">Loading...</span>
          </template>
          <template v-else>Submit</template>
        </button>
    </form>
    <p v-if="message" :class="message.status" class="mt-2 text-center">{{ message.msg }}</p>

  </div>
</template>

<script>
// import VueCountryDropdown from 'vue-country-dropdown-2'

export default {
  // components: {
  //     VueCountryDropdown
  // },
  data() {
    return {
      // phoneCode: '+44',
      tel: '',
      loading: false,
      message: null,
      countryCode: '',
      isValid: true
    }
  },
  props: {
    casinoname: {
      type: String,
      default: () => ""
    }
  },
  methods: {
    validatePhone() {
      // Remove any non-digit characters
      this.tel = this.tel.replace(/\D/g, '');
      
      // Truncate to 10 digits if longer
      if (this.tel.length > 10) {
        this.tel = this.tel.slice(0, 10);
      }
    },
    validateCountryCode() {
      // Remove any non-digit characters except the leading '+'
      this.countryCode = this.countryCode.replace(/[^\d+]/g, '');
      if (this.countryCode && !this.countryCode.startsWith('+')) {
        this.countryCode = '+' + this.countryCode;
      }
    },
    onCountryCodeFocus() {
      if (!this.countryCode) {
        this.countryCode = '+';
      }
    },
    onCountryCodeBlur() {
      if (this.countryCode === '+') {
        this.countryCode = '';
      }
    },
    async submitForm() {
      
      // Check if it's exactly 10 digits
      this.isValid = this.tel.length === 10;

      if (!this.isValid) {
        return;
      }

      this.loading = true
      this.message = null
    
      try {
        const response = await this.$axios.$post('/api/sendsms', {
          casino: this.casinoname,
          recipient: this.countryCode+this.tel
        })
        
        if (response.status === 200) {
          this.message = {
            status: 'success',
            msg: response.message,
          }
        } else {
          this.message = {
            status: 'error',
            msg: response.message,
          }
        }
        this.tel = '';
        this.countryCode = ''
      } catch (error) {
        this.message = {
            status: 'error',
            msg: 'An error occurred. Please try again.',
          }
        console.error('Subscription error:', error)
      } finally {
        this.loading = false
      }
    },
  },
}
</script>

<style scoped>
input#countryCode {
    width: 90px;
}
.is-invalid {
  border-color: #dc3545;
}
.invalid-feedback {
  color: #dc3545;
  font-size: 15px;
  display: block;
  margin-top: 0;
  margin-bottom: 0.25rem;
}
.newsletter-form label {
  font-weight: 600;
}
.newsletter-form input {
    background: #ededed;
    line-height: 2.5rem;
    font-size: 19px;
    border: 1px solid #919191;
    border-radius: 10px;
}
.newsletter-form .btn {
    font-size: 19px;
    font-weight: 800;
    padding: 0 59px;
    line-height: 56px;
    color: var(--white);
    box-shadow: 0px 4px 4px 0px #00000040;
    text-transform: uppercase;
    margin-bottom: 5px;
}
p.success {
  color: green;
  border: 1px solid;
  padding: 6px;
  font-size: 18px;
}

p.error {
    color: red;
    border: 1px solid;
    padding: 6px;
    font-size: 18px;
}

@media (max-width:767px){
  p.error, p.success {
    font-size: 16px;
  }
  .newsletter-form input {
    font-size: 14px;
    line-height: 1.5rem;
  }
  .newsletter-form label {
    font-size: 14px;
  }
  .newsletter-form .btn {
      font-size: 12px;
      padding: 0 22px;
      line-height: 32px;
      border-radius: 7px;
  }
}
@media (max-width:991px){
  .newsletter-form .btn {
      font-size: 15px;
      padding: 0 34px;
      line-height: 40px;
  }
}

</style>

<style>
.newsletter-form .v-select {
    min-width: 160px;
    min-height: 54px;
}
.newsletter-form .vs__dropdown-toggle{
  height: auto;
  min-height: 54px;
  background: #ededed;
  border-radius: 10px;
}
</style>